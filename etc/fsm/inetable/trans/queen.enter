#!/bin/sh -e
logger -t fsm queen.enter
. ../common.sh

gwiptbl=/tmp/p2ptbl/gwip
NodeId="$(cat /etc/nodeid)"

## setup gateway IPv4
# determine gw IP from p2ptable
getoct () {
	case $1 in
		free |\
		ghost|\
		queen)
			p2ptbl show $gwiptbl \
			| cut -f1,2 \
			| egrep "[0-9]*"$'\t'"$1" \
			| $2 \
			| head -n1 \
			| cut -f1
		;;
		owned)
			p2ptbl show $gwiptbl \
			| grep "$NodeId" \
			| cut -f1,2 \
			| $2 \
			| head -n1 \
			| cut -f1
			;;
		*)
		exit 1
	esac
}
# get our old IP if possible
# if we had an IP in the past, log that we use it ;)
oct3=$(getoct owned "sort -n") && [ -n "$oct3" ] && logger -t fsm "Found old IP, re-using it"
# get the lowest free addr if we dont previously owned a IP
[ -z "$oct3" ] && oct3=$(getoct free "sort -n") && [ -n "$oct3" ] && logger -t fsm "Using free IP"
# no free addrs? -> steal an addr from a random ghost
[ -z "$oct3" ] && oct3=$(getoct ghost "shuf") && [ -n "$oct3" ] && logger -t fsm "Warning! No free IP's left. Got an IP from a ghost!"
# no ghost addrs? -> steal an addr from a random queen
[ -z "$oct3" ] && oct3=$(getoct queen "shuf") && [ -n "$oct3" ] && logger -t fsm "Warning! Address space exhaustion! Stealing IP from random Queen!"
# Bail out if $oct3 is invalid
[ -n "$oct3" ]
net_mesh=$(uci get cloud.cur.net_mesh)
gwip=$(      ipcalc.sh $net_mesh $(($oct3 * 256 + 1))   1 | grep ^START | cut -f2 -d=)
dhcp_start=$(ipcalc.sh $net_mesh $(($oct3 * 256 + 2))   1 | grep ^START | cut -f2 -d=)
dhcp_end=$(  ipcalc.sh $net_mesh $(($oct3 * 256 + 254)) 1 | grep ^START | cut -f2 -d=)

p2ptbl update $gwiptbl $oct3 "queen\t$NodeId" br-mesh

# activate gw mode
batctl gw server

# set up gw IP
mesh_add_ipv4 $gwip 255.255.0.0
logger -t fsm "Set IPv4: $gwip"

## setup DHCP
echo "
set dhcp.mesh=dhcp
set dhcp.mesh.start=2
set dhcp.mesh.limit=254
set dhcp.mesh.leasetime=$DHCPLeaseTime
set dhcp.mesh.interface=mesh
set dhcp.mesh.start_ip=$dhcp_start
set dhcp.mesh.end_ip=$dhcp_end
" | uci batch
/etc/init.d/dnsmasq restart

## set splash
# start redirection httpd (for splash)
echo "http://$gwip/cgi-bin/splash.html? /sbin/urlencode" > /tmp/redirection_target
enable_httpd redirection
/etc/init.d/uhttpd restart

# fill splash table
splash_sync "$1"

# redirect tcp to local httpd, dns to local ns
iptables -t nat -F prerouting_inet_unsplashed
iptables -t nat -A prerouting_inet_unsplashed -p tcp            -j DNAT --to $gwip:81
iptables -t nat -A prerouting_inet_unsplashed -p udp --dport 53 -j DNAT --to $gwip:53
# TODO: discard any other UDP traffic

